buildscript {
    repositories {
        jcenter()
        maven { url "https://plugins.gradle.org/m2/" }
    }
    dependencies {
        classpath 'com.github.jengelman.gradle.plugins:shadow:5.2.0'
        classpath "se.patrikerdes:gradle-use-latest-versions-plugin:0.2.13"
        classpath 'com.github.ben-manes:gradle-versions-plugin:0.21.0'
    }
}

group 'SuperiorPrison'
apply plugin: 'maven'
apply plugin: 'base'

allprojects {
    version = '0.0.7-BETA'
    apply plugin: 'java'
    apply plugin: 'com.github.johnrengelman.shadow'

    apply plugin: 'com.github.ben-manes.versions'
    apply plugin: 'se.patrikerdes.use-latest-versions'

    repositories {
        jcenter()
        mavenLocal()
        maven { url 'https://repo.codemc.org/repository/nms/' }
        maven { url 'https://repo.codemc.org/repository/maven-public/' }
        maven { url 'https://jitpack.io' }
        maven { url 'http://repo.extendedclip.com/content/repositories/placeholderapi/' }
    }

    dependencies {
        if (!project.name.startsWith("nms"))
            compileOnly "org.spigotmc:spigot:1.12.2-R0.1-SNAPSHOT"
        compileOnly 'org.projectlombok:lombok:1.18.8'
        annotationProcessor 'org.projectlombok:lombok:1.18.8'

        if (project.name.equalsIgnoreCase("plugin")) {
            compile "com.oop.orangeengine:file:4.6"
            compile "com.oop.orangeengine:item:4.6"
            compile "com.oop.orangeengine:engine:4.6"
            compile "com.oop.orangeengine:particle:4.6"
            compile "com.oop.orangeengine:inventory:4.6"
            compile "com.oop.orangeengine:command:4.6"
            compile "com.oop.orangeengine:eventssubscription:4.6"
            compile "com.oop.orangeengine:message:4.6"

            // Dependencies
            compileOnly("com.github.MilkBowl:VaultAPI:1.7")
            compileOnly 'me.clip:placeholderapi:2.10.4'
            compileOnly fileTree("../lib")
            compile "com.oop:data:1.0"

        } else {
            compileOnly "com.oop.orangeengine:file:4.6"
            compileOnly "com.oop.orangeengine:item:4.6"
            compileOnly "com.oop.orangeengine:engine:4.6"
            compileOnly "com.oop.orangeengine:particle:4.6"
            compileOnly "com.oop.orangeengine:inventory:4.6"
            compileOnly "com.oop.orangeengine:command:4.6"
            compileOnly "com.oop.orangeengine:database:4.6"
            compileOnly "com.oop.orangeengine:eventssubscription:4.6"
            compileOnly "com.oop.orangeengine:message:4.6"
        }

        if (project.name.equalsIgnoreCase("plugin")) {
            compile project(":api")

        } else if (!project.name.equalsIgnoreCase("api"))
            compileOnly project(":plugin")
    }

    configurations {
        all*.exclude group: 'org.bukkit', module: 'bukkit'
    }

    shadowJar {
        destinationDir file('../archive')
        archiveName project.name + ".jar"

        relocate("com.oop.orangeengine", "com.bgsoftware.superiorprison.engine")
    }

    processResources {
        eachFile { details ->
            if (details.name.contentEquals('plugin.yml')) {
                filter { String line ->
                    line.replaceAll('\\$\\{project.version\\}', version)
                }
            }
        }
    }

    tasks.build.dependsOn tasks.processResources
    tasks.build.dependsOn tasks.shadowJar
}

subprojects.each { subproject -> evaluationDependsOn(subproject.path) }

shadowJar {
    archiveName = 'SuperiorPrison.jar'
    destinationDir = file("D:\\Work\\Allatori\\SuperiorPrison")
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE

    from fileTree(dir: "archive").collect {
        zipTree(it)
    }
}

task copyJarToServer {
    doLast {
        copy {
            from 'D:\\Work\\Allatori\\SuperiorPrison\\SuperiorPrison.jar'
            into 'server\\plugins'
        }
    }
}

task buildJar(dependsOn: [build, shadowJar, copyJarToServer])

shadowJar.dependsOn(subprojects.shadowJar)
shadowJar.finalizedBy copyJarToServer