global options:
  # If a backpack is bound to only one player
  # If set to true, when others will try to open the backpack, it's gonna be empty
  player bound: false

"minerBackPack":
  type: advanced
  item:
    material: chest
    display name: "&cMiner's Backpack ({backpack_level})"
    lore:
      - "&5Store your mined blocks"
      - "&d&l* &7Capacity: &d{backpack_capacity}"
      - "&d&l* &7Used: &d{backpack_used}"
      - ""
      - "&d* &l&5Contents"
      - "{item_template} &d{item_type} x {item_amount}"

  # How much rows the backpack has?
  # The rows + menu design cannot exceed the minecraft limit of inventory size!
  rows: 2

  # How many pages will the backpack have?
  pages: 1

  # If the backpack should be sellable by default
  sellable: true

  # Upgrades for the backpack
  # The default backpack is level 1, so next is 2
  upgrades:
    "2":
      rows: 3
      pages: 2
      description:
        - "&cGain +1 page"
      requirements:
        eco:
          display: "Money"
          value: "1000"
          getter: "get balance of %prisoner%"
          checker: "%getter% >= %value%"
          taker: "take %value% from %prisoner% balance"
    "3":
      pages: 3
      description:
        - "&cGain +1 page"
      requirements:
        eco:
          display: "Money"
          value: "2000"
          getter: "get balance of %prisoner%"
          checker: "%getter% >= %value%"
          taker: "take %value% from %prisoner% balance"

"simpleBackPack":
  type: simple
  item:
    material: chest
    display name: "&cSimple Backpack ({backpack_level})"
    lore:
      - "&5Store your mined blocks"
      - "&d&l* &7Capacity: &d{backpack_capacity}"
      - "&d&l* &7Used: &d{backpack_used}"
      - ""
      - "&d* &l&5Contents"
      - "{item_template} &d{item_type} x {item_amount}"

  capacity: 200
  upgrades:
    "2":
      capacity: 500
      description:
        - "&cGain +300 capacity"
      requirements:
        eco:
          display: "Money"
          value: "1000"
          getter: "get balance of %prisoner%"
          checker: "%getter% >= %value%"
          taker: "take %value% from %prisoner% balance"
    "3":
      capacity: 700
      description:
        - "&cGain +200 capacity"
      requirements:
        eco:
          display: "Money"
          value: "2000"
          getter: "get balance of %prisoner%"
          checker: "%getter% >= %value%"
          taker: "take %value% from %prisoner% balance"